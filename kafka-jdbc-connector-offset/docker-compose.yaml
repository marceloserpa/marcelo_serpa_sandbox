version: '3.8'

services:

  postgres:
    container_name: jdbc-connector-poc-db
    image: postgres:15
    environment:
      POSTGRES_USER: kafka
      POSTGRES_PASSWORD: kafka
      POSTGRES_DB: products
    networks:
      - docker-local-network      
    ports:
      - 5432:5432
    volumes:
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql


  zookeeper:
    image: confluentinc/cp-zookeeper:7.4.1
    container_name: jdbc-connector-poc-zookeeper
    networks:
      - docker-local-network
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  kafka:
    image: confluentinc/cp-kafka:7.4.1
    container_name: jdbc-connector-poc-broker
    depends_on:
      - zookeeper
    ports:
      - 9092:9092
    networks:
      - docker-local-network      
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1   

  kafdrop:
    image: obsidiandynamics/kafdrop:4.0.1
    container_name: jdbc-connector-poc-kafdrop
    networks: 
      - docker-local-network
    depends_on:
      - kafka
    ports:
      - 19000:9000
    environment:
      KAFKA_BROKERCONNECT: kafka:29092

      
  kafka-connect:
    image: confluentinc/cp-kafka-connect:7.5.0
    container_name: jdbc-connector-poc-connect
    depends_on:
      - kafka
      - postgres
    ports:
      - 8083:8083
    networks:
      - docker-local-network    
    environment:
      CONNECT_BOOTSTRAP_SERVERS: kafka:29092
      CONNECT_REST_PORT: 8083
      CONNECT_GROUP_ID: "connect-cluster"
      CONNECT_CONFIG_STORAGE_TOPIC: connect-configs
      CONNECT_OFFSET_STORAGE_TOPIC: connect-offsets
      CONNECT_STATUS_STORAGE_TOPIC: connect-status
      CONNECT_CONFIG_STORAGE_REPLICATION_FACTOR: 1
      CONNECT_OFFSET_STORAGE_REPLICATION_FACTOR: 1
      CONNECT_STATUS_STORAGE_REPLICATION_FACTOR: 1
      CONNECT_KEY_CONVERTER: org.apache.kafka.connect.storage.StringConverter
      CONNECT_VALUE_CONVERTER: org.apache.kafka.connect.json.JsonConverter
      CONNECT_VALUE_CONVERTER_SCHEMAS_ENABLE: "false"
      CONNECT_KEY_CONVERTER_SCHEMAS_ENABLE: "false"
      CONNECT_INTERNAL_KEY_CONVERTER: "org.apache.kafka.connect.json.JsonConverter"
      CONNECT_INTERNAL_VALUE_CONVERTER: "org.apache.kafka.connect.json.JsonConverter"
      CONNECT_PLUGIN_PATH: "/usr/share/java,/etc/kafka-connect/jars"
      CONNECT_LOG4J_ROOT_LOGLEVEL: INFO
      CONNECT_REST_ADVERTISED_HOST_NAME: kafka-connect
    volumes:
      - ./connect-plugins:/etc/kafka-connect/jars

networks: 
  docker-local-network:
    driver: bridge  