version: '3.1'

services:

  db:
    image: postgres
    restart: always
    container_name: outbox_poc_postgres
    environment:
      POSTGRES_USER: marceloserpa
      POSTGRES_PASSWORD: 123456
      POSTGRES_DB: outbox-poc
    command: ['postgres', '-c', 'wal_level=logical']
    volumes:
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - 5442:5432

  adminer:
    image: adminer
    container_name: outbox_poc_pgadmin
    restart: always
    ports:
      - 9080:8080

  zookeeper:
    image: confluentinc/cp-zookeeper:7.4.1
    container_name: outbox_poc_zookeeper
    networks:
      - broker-kafka
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  kafka:
    image: confluentinc/cp-kafka:7.4.1
    container_name: outbox_poc_kafka
    depends_on:
      - zookeeper
    ports:
      - 9092:9092
    networks:
      - broker-kafka      
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1   
         
  kafdrop:
    image: obsidiandynamics/kafdrop:latest
    networks: 
      - broker-kafka
    depends_on:
      - kafka
    ports:
      - 19000:9000
    environment:
      KAFKA_BROKERCONNECT: kafka:29092


volumes:
  init.sh:

networks: 
  broker-kafka:
    driver: bridge     
